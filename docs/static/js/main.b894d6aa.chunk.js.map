{"version":3,"sources":["Pages/Contact.js","Pages/AboutMe.js","Components/Me.js","assets/Pk1.png","assets/Pk2.png","assets/Pk3.png","assets/Cook1.png","assets/Cook2.png","assets/Codr1.png","assets/Codr2.png","assets/Hexcalour1.png","assets/Hexcalour2.png","App.js","Pages/Projects.js","reportWebVitals.js","index.js"],"names":["Other","props","useState","copy","setCopy","className","onClick","string","navigator","clipboard","writeText","console","log","setTimeout","onSubmit","e","preventDefault","emailjs","sendForm","target","then","result","text","error","reset","type","name","placeholder","Home","Me","src","href","alt","routes","Component","Contact","key","path","hexPic","setHexPic","pkPic","setPkPic","codrPic","setCodrPic","cookPic","setCookPic","pkArray","pk1","pk2","pk3","cookArray","cook1","cook2","codrArray","codr1","codr2","hexArray","hex1","hex2","newFunc","length","newFunc2","useEffect","AboutMe","App","map","route","to","component","page","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b894d6aa.chunk.js","sourcesContent":["import emailjs from \"emailjs-com\"\nimport {useState} from \"react\"\n\nfunction Other(props) {\n  const [copy, setCopy] = useState(false)\n\n  const sendEmail = (e) => {\n    e.preventDefault();\n\n    emailjs.sendForm('gmail', 'port-template', e.target, 'user_Y7Q650gzfvmB3TWjVxDFj')\n      .then((result) => {\n          console.log(result.text);\n      }, (error) => {\n          console.log(error.text);\n      });\n      e.target.reset()\n  }\n  const copyCodeToClipboard = (string) => {\n    navigator.clipboard.writeText(string)\n    setCopy(true)\n    console.log(copy)\n  }\n  const copyFunction = () => {\n    console.log(\"yep\")\n    setTimeout(function(){setCopy(false)}, 10000)\n    return(<span className=\"copyStatus\">Copied!</span>)\n  }\n  \n  return (\n    <div className=\"contactPage\">\n      <div className=\"contactBox\" >\n        <button onClick={() => {copyCodeToClipboard(\"arichsonh@gmail.com\")}}>Copy Email</button>\n        <p className=\"myEmail\"> arichsonh@gmail.com</p>\n        {copy ? copyFunction(): \"\"}\n        <form className=\"form\" onSubmit={sendEmail}>\n          <div className=\"contactItem subjectDiv\">\n            <label className=\"word\">Subject:  {\" \"} </label>\n            <input className=\"inputs\" type=\"text\" name=\"subject\" placeholder=\"subject\" />\n          </div>\n          <div className=\"contactItem nameDiv\">\n            <label className=\"word\">Name:  {\" \"} </label>\n            <input className=\"inputs\" type=\"text\" name=\"name\" placeholder=\"name\" />\n          </div>\n          <div className=\"contactItem emailDiv\">\n            <label className=\"word\"> Email: {\" \"} </label>\n            <input className=\"inputs\" type=\"text\" name=\"email\" placeholder=\"email\" />\n          </div>\n          <div className=\"contactItem messageDiv\">\n            <label className=\"word\">Message:  {\" \"} </label>\n            <textarea className=\"inputs\" name=\"message\" placeholder=\"message\" />\n          </div>\n          <div className=\"contactItem submitDiv\">\n            <input className=\"inputs\" type=\"submit\" />\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Other;\n","function Home() {\n  return (\n    <div className=\"allAboutMe\">\n      <div className=\"aboutMeDiv\">\n\n       <h2 className=\"aboutTitle\">About me</h2>\n        <p>I am a Front-End Software Engineer with a Bachelors Degree in Mathematics and a love for problem solving. I grew up helping my parents farm and sell vegetables up until I finished college. My original plan was to become a math instructor but when covid hit, I saw that it wouldâ€™ve been a difficult time to pursue that career. While in isolation, life came and gave me presented an opportunity to me so I applied for General Assembly, a coding camp. During the bootcamp I learned HTML, CSS, and Javascript, React and Express.</p>\n      </div>\n      <div className=\"educationDiv\">\n        <h2>Education</h2>\n        <h4>General Assembly, Software Engineering Immersive, Washington, DC</h4> \t<p>Certification of completion <span className=\"toTheRight\">03/2021 - 05/2021</span></p>\n\n        <h4>California State University Fresno, Fresno, CA </h4>\n        <p>B.A. Mathematics\t     <span className=\"toTheRight\">12/2018</span></p>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","\n\nexport default function Me () {\n\n    return (\n        <div className=\"containAllOfMe\">\n            <div className=\"theBorder\">\n                <img className=\"myPic\" src=\"https://media-exp1.licdn.com/dms/image/C5603AQFS6s92Ovomyg/profile-displayphoto-shrink_200_200/0/1616456569451?e=1626912000&v=beta&t=VB7sXc2XRFY8e3a9GwOV6K2GK6NKUP0TXPuKLtd5DEM\" />\n                <div className=\"meBox\">\n                    <h1 className=\"myName\"> Arichson Her </h1>\n                    <h3 className=\"jobTitle\">Front-end Software Engineer</h3>\n                    <p className=\"littleInfo\">Email: arichsonh@gmail.com</p>\n                    <div className=\"links\">\n                        <a className=\"linkedIn\" href='https://www.linkedin.com/in/arichsonh' target=\"blank\"><img className=\"image\" src=\"https://www.iconpacks.net/icons/2/free-linkedin-icon-2166-thumb.png\" alt=\"Linked In\" />Linked In</a> <br />\n                        <a className=\"gitHub\" href='https://github.com/Arichson?tab=repositories' target=\"blank\"><img className=\"image\" src=\"https://cdn4.iconfinder.com/data/icons/iconsimple-logotypes/512/github-512.png\" alt=\"Github\" />Github</a>\n                    </div>\n                </div>\n                <div className={\"topLeft corners\"}></div>\n                <div className={\"topRight corners\"}></div>\n                <div className={\"bottomLeft corners\"}></div>\n                <div className={\"bottomRight corners\"}></div>\n            </div>\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/Pk1.96105f5b.png\";","export default __webpack_public_path__ + \"static/media/Pk2.c21f1a8c.png\";","export default __webpack_public_path__ + \"static/media/Pk3.02ca4a4c.png\";","export default __webpack_public_path__ + \"static/media/Cook1.2df53baa.png\";","export default __webpack_public_path__ + \"static/media/Cook2.e3a03b11.png\";","export default __webpack_public_path__ + \"static/media/Codr1.7566d8fa.png\";","export default __webpack_public_path__ + \"static/media/Codr2.1316e293.png\";","export default __webpack_public_path__ + \"static/media/Hexcalour1.12cb2450.png\";","export default __webpack_public_path__ + \"static/media/Hexcalour2.62c990da.png\";","import './main.css';\nimport { HashRouter as Router, Route, Switch, Link } from 'react-router-dom'\nimport Contact from './Pages/Contact'\nimport AboutMe from './Pages/AboutMe'\nimport Me from './Components/Me'\nimport Projects from './Pages/Projects'\nimport {useState} from 'react'\n\n// Save the Component, key and path in an array of objects for each Route\n// You could write all routes by hand but I'm lazy annd this lets me use\n// the map method to just loop over them and make my routes\n// SWITCH is used so that it only ever matches one route at a time\n// If you don't want to use react router just rewrite the app component to not use it\n\nconst routes = [\n  {\n    Component: Contact,\n    key: 'Contact',\n    path: '/contact'\n  },\n  {\n    Component: Projects,\n    key: 'Projects',\n    path: '/projects'\n  },\n  {\n    Component: AboutMe,\n    key: 'About Me',\n    path: '/'\n  }\n]\n\nexport default function App () {\n  // const [data, setData] = useState([])\n\n  return (\n    <Router>\n      <nav className=\"nav\">\n        {routes.map(route => <Link className=\"navItems\" key={route.key} to={route.path}>{route.key}</Link>)}\n      </nav>\n      < Me />\n      <Switch>\n        {\n          routes.map(({key, Component, path}) => (\n            <Route\n              key={key}\n              path={path}\n              component={props => <Component {...props} page={key} />}\n              />))\n        }\n      </Switch>\n    </Router>\n  )\n}\n","import {useEffect, useState} from \"react\"\nimport pk1 from \"../assets/Pk1.png\"\nimport pk2 from \"../assets/Pk2.png\"\nimport pk3 from \"../assets/Pk3.png\"\nimport cook1 from \"../assets/Cook1.png\"\nimport cook2 from \"../assets/Cook2.png\"\nimport codr1 from \"../assets/Codr1.png\"\nimport codr2 from \"../assets/Codr2.png\"\nimport hex1 from \"../assets/Hexcalour1.png\"\nimport hex2 from \"../assets/Hexcalour2.png\"\n\nexport default function Projects () {\n    const [hexPic, setHexPic] = useState(0)\n    const [pkPic, setPkPic] = useState(0)\n    const [codrPic, setCodrPic] = useState(0)\n    const [cookPic, setCookPic] = useState(0)\n\n    const pkArray = [pk1, pk2, pk3]\n    const cookArray = [cook1, cook2]\n    const codrArray = [codr1, codr2]\n    const hexArray = [hex1, hex2]\n\n    const newFunc = () => {\n        setHexPic((hexPic+1%hexArray.length))\n        setPkPic((pkPic+1)%pkArray.length)\n        setCodrPic((codrPic+1)%codrArray.length)\n        setCookPic((cookPic+1)%cookArray.length)\n        setTimeout(newFunc2, 5000)\n        console.log(hexPic, pkPic, cookPic)\n    }\n    const newFunc2 = () => {\n        setHexPic((hexPic)%hexArray.length)\n        setPkPic((pkPic)%pkArray.length)\n        setCodrPic((codrPic)%codrArray.length)\n        setCookPic((cookPic)%cookArray.length)\n        setTimeout(newFunc, 5000)\n        console.log(hexPic, pkPic, cookPic)\n    }\n\n    useEffect(() => {\n        setTimeout(newFunc, 5000)\n    }, [])\n \n\n\n    return (\n\n        <div className='Projects'>\n            <div className='single_Project'>\n                <div className=\"projectPic\"><img className=\"picture\" src={hexArray[hexPic]}/></div>\n                <div className=\"information\">\n\n                    <div className=\"links\">\n                        <a target='blank' href='https://arichson.github.io/first-game-made/'>\n                            <h3>Hexacalour</h3>\n                        </a> ---\n                        <a target='blank' href='https://github.com/Arichson/first-game-made'>Github</a>\n                    </div>\n                    <div className=\"description\">\n                        Hexcalour is a game of based on colors. This game is a two player game where each player competes to take over half the board. The first player who succeeds wons on that board.\n                    </div>\n                        \n                        \n                    <div className=\"techs\">\n                        Technologies used\n                    </div>\n                    <div>\n                        HTML â€¢\n                        CSS: modals â€¢                    \n                        JavaScript: loops, math methods/randomization, array methods, event listeners, callback  \n                    </div>\n                </div>\n            </div>\n            <div className='single_Project'>\n                <div className=\"projectPic\"><img className=\"picture\" src={pkArray[pkPic]}/></div>\n                <div className=\"information\">\n                    <div className=\"links\">\n                        <a target='blank' href='https://arichson.github.io/PkmnProj/#/'>\n                            <h3>PkmnProj</h3>\n                        </a> ---\n                        <a target='blank' href='https://github.com/Arichson/PkmnProj'>Github</a>\n                    </div>\n                    <div className=\"description\">\n                        This website was made to provided a list of Pokemons with the help of PokeApi. The website will allow users to scan through the pages and look at all the different species of Pokemons. The website is mostly a Pokedex, meaning that it will not provided information about the games but rather just on the Pokemon themselves.\n                    </div>\n                        \n                    <div className=\"techs\">Technologies used</div>\n                    <div>\n                    JavaScript: math methods/randomization, array methods, callback, Api data â€¢ \n                    React: Routers, Links, export function â€¢ \n                    CSS Modules, Responsive Design\n                    </div>\n                </div>\n            </div>\n            <div className='single_Project'>\n                <div className=\"projectPic\"><img className=\"picture\" src={codrArray[codrPic]}/></div>\n                    <div className=\"information\">\n                    <div className=\"links\">\n                        <a target='blank' href='https://bunmeevang.github.io/project-3-front/'>\n                            <h3>Codr</h3>\n                        </a> ---\n                        <a target='blank' href='https://github.com/bunmeevang/project-3-front'>Github</a>\n                    </div>\n                    <div className=\"description\">\n\n                    This Project was created as a media for people to meet and comment about things. This applications include posting, \n                    </div>\n                    <div className=\"techs\">Technologies used</div>\n                    JS: React â€¢ \n                    Python: Django â€¢\n                    CSS \n                    \n                </div>\n            </div>\n            <div className='single_Project'>\n                <div className=\"projectPic\"><img className=\"picture\" src={cookArray[cookPic]}/></div>\n                    <div className=\"information\">\n                    <div className=\"links\">\n                        <a target='blank' href=''>\n                            <h3>The Cook Files</h3>\n                        </a> ---\n                        <a target='blank' href='https://github.com/Arichson/theCookFiles-Front'>Github</a>\n                    </div>\n                    <div className=\"description\">\n                        This project was created so that users can find recipes and save them into their account. This website includes a login with authentication. It was built with React, Tailwind, Express, and a third party Api, <a href=\"https://spoonacular.com/food-api\" target=\"blank\">Spoonacular</a>.\n                    </div>\n                    <div className=\"techs\">Technologies used</div>\n                    <div>\n                        Javascriptâ€¢ React â€¢ Express â€¢ CSS\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}